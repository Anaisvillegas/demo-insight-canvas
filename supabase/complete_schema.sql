-- Complete Supabase Schema for Tecnoandina

-- Set PostgreSQL configuration
SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

-- Create necessary extensions
CREATE EXTENSION IF NOT EXISTS "pgsodium" WITH SCHEMA "pgsodium";
CREATE EXTENSION IF NOT EXISTS "pg_graphql" WITH SCHEMA "graphql";
CREATE EXTENSION IF NOT EXISTS "pg_stat_statements" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "pgcrypto" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "pgjwt" WITH SCHEMA "extensions";
CREATE EXTENSION IF NOT EXISTS "supabase_vault" WITH SCHEMA "vault";
CREATE EXTENSION IF NOT EXISTS "uuid-ossp" WITH SCHEMA "extensions";

-- Set default tablespace and table access method
SET default_tablespace = '';
SET default_table_access_method = "heap";

-- Create profiles table
CREATE TABLE IF NOT EXISTS "public"."profiles" (
    "id" "uuid" NOT NULL,
    "updated_at" timestamp with time zone,
    "full_name" "text",
    "avatar_url" "text",
    PRIMARY KEY ("id")
);

-- Create chats table
CREATE TABLE IF NOT EXISTS "public"."chats" (
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "title" "text" NOT NULL,
    "user_id" "uuid" NOT NULL,
    "id" "uuid" DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    PRIMARY KEY ("id")
);

-- Create messages table
CREATE TABLE IF NOT EXISTS "public"."messages" (
    "id" bigint NOT NULL,
    "created_at" timestamp with time zone DEFAULT "now"() NOT NULL,
    "text" "text" NOT NULL,
    "metadata" "jsonb",
    "chat_id" "uuid" NOT NULL,
    "role" "text" NOT NULL,
    "user_id" "uuid" NOT NULL,
    "attachments" "jsonb",
    "message_type" text,
    PRIMARY KEY ("id")
);

-- Create message ID sequence
ALTER TABLE "public"."messages" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."messages_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);

-- Create index for message_type
CREATE INDEX IF NOT EXISTS "idx_messages_message_type" ON "public"."messages" ("message_type");

-- Add comment to message_type column
COMMENT ON COLUMN "public"."messages"."message_type" IS 'Tipo de mensaje (ej: "context" para mensajes de contexto invisibles)';

-- Create courses table first (since it's referenced by modules and artifacts)
CREATE TABLE IF NOT EXISTS "public"."courses" (
    "id" uuid DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT now() NOT NULL,
    "title" text NOT NULL,
    "description" text,
    "cover_image" text,
    "user_id" uuid NOT NULL,
    "is_published" boolean DEFAULT false,
    "difficulty" text DEFAULT 'intermediate',
    "estimated_duration" integer, -- en minutos
    "tags" text[],
    PRIMARY KEY ("id")
);

-- Create modules table (based on module_id in artifacts)
CREATE TABLE IF NOT EXISTS "public"."modules" (
    "id" uuid DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT now() NOT NULL,
    "title" text NOT NULL,
    "description" text,
    "order_index" integer,
    "course_id" uuid,
    "user_id" uuid NOT NULL,
    PRIMARY KEY ("id")
);

-- Create artifacts table
CREATE TABLE IF NOT EXISTS "public"."artifacts" (
    "id" uuid DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT now() NOT NULL,
    "title" text,
    "type" text,
    "content" text,
    "user_id" uuid NOT NULL,
    "content_type" TEXT, -- 'video', 'quiz', 'reading', 'exercise', 'project'
    "progress" FLOAT DEFAULT 0, -- 0 a 1 (0% a 100%)
    "status" TEXT DEFAULT 'not-started', -- 'not-started', 'in-progress', 'completed'
    "duration" INTEGER, -- en minutos
    "difficulty" TEXT, -- 'beginner', 'intermediate', 'advanced'
    "tags" TEXT[], -- array de etiquetas
    "module_id" uuid,
    "course_id" uuid,
    PRIMARY KEY ("id")
);

-- Create indexes for artifacts
CREATE INDEX idx_artifacts_status ON public.artifacts(status);
CREATE INDEX idx_artifacts_content_type ON public.artifacts(content_type);
CREATE INDEX idx_artifacts_module_id ON public.artifacts(module_id);
CREATE INDEX idx_artifacts_course_id ON public.artifacts(course_id);

-- Add comments to artifact columns
COMMENT ON COLUMN public.artifacts.content_type IS 'Tipo de contenido educativo: video, quiz, reading, exercise, project';
COMMENT ON COLUMN public.artifacts.progress IS 'Progreso del usuario en este artifact (0 a 1)';
COMMENT ON COLUMN public.artifacts.status IS 'Estado del artifact: not-started, in-progress, completed';
COMMENT ON COLUMN public.artifacts.duration IS 'Duración estimada en minutos';
COMMENT ON COLUMN public.artifacts.difficulty IS 'Nivel de dificultad: beginner, intermediate, advanced';
COMMENT ON COLUMN public.artifacts.tags IS 'Etiquetas para categorizar el contenido';
COMMENT ON COLUMN public.artifacts.module_id IS 'ID del módulo al que pertenece este artifact';
COMMENT ON COLUMN public.artifacts.course_id IS 'ID del curso al que pertenece este artifact';

-- Create system_config table
CREATE TABLE IF NOT EXISTS "public"."system_config" (
    "id" uuid DEFAULT "extensions"."uuid_generate_v4"() NOT NULL,
    "created_at" timestamp with time zone DEFAULT now() NOT NULL,
    "updated_at" timestamp with time zone DEFAULT now() NOT NULL,
    "sector" text DEFAULT 'Tecnología',
    "kpi_1" text DEFAULT 'Retención de usuarios',
    "kpi_2" text DEFAULT 'Conversión',
    "kpi_3" text DEFAULT 'Engagement',
    "preferred_model" text DEFAULT 'GPT-4',
    "data_analysis_enabled" boolean DEFAULT true,
    "code_generation_enabled" boolean DEFAULT true,
    "visualization_enabled" boolean DEFAULT true,
    PRIMARY KEY ("id")
);

-- Add foreign key constraints
ALTER TABLE ONLY "public"."messages"
    ADD CONSTRAINT "messages_chat_id_fkey" FOREIGN KEY ("chat_id") REFERENCES "public"."chats"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."modules"
    ADD CONSTRAINT "modules_course_id_fkey" FOREIGN KEY ("course_id") REFERENCES "public"."courses"("id") ON DELETE CASCADE;

ALTER TABLE ONLY "public"."artifacts"
    ADD CONSTRAINT "artifacts_module_id_fkey" FOREIGN KEY ("module_id") REFERENCES "public"."modules"("id") ON DELETE SET NULL;

ALTER TABLE ONLY "public"."artifacts"
    ADD CONSTRAINT "artifacts_course_id_fkey" FOREIGN KEY ("course_id") REFERENCES "public"."courses"("id") ON DELETE SET NULL;

-- Insert default system_config if not exists
INSERT INTO "public"."system_config" (
    "sector", 
    "kpi_1", 
    "kpi_2", 
    "kpi_3", 
    "preferred_model", 
    "data_analysis_enabled", 
    "code_generation_enabled", 
    "visualization_enabled"
) 
SELECT 
    'Tecnología', 
    'Retención de usuarios', 
    'Conversión', 
    'Engagement', 
    'GPT-4', 
    true, 
    true, 
    true
WHERE NOT EXISTS (SELECT 1 FROM "public"."system_config" LIMIT 1);

-- Grant permissions
GRANT ALL ON TABLE "public"."chats" TO "anon", "authenticated", "service_role";
GRANT ALL ON TABLE "public"."messages" TO "anon", "authenticated", "service_role";
GRANT ALL ON SEQUENCE "public"."messages_id_seq" TO "anon", "authenticated", "service_role";
GRANT ALL ON TABLE "public"."profiles" TO "anon", "authenticated", "service_role";
GRANT ALL ON TABLE "public"."artifacts" TO "anon", "authenticated", "service_role";
GRANT ALL ON TABLE "public"."system_config" TO "anon", "authenticated", "service_role";
GRANT ALL ON TABLE "public"."modules" TO "anon", "authenticated", "service_role";
GRANT ALL ON TABLE "public"."courses" TO "anon", "authenticated", "service_role";
